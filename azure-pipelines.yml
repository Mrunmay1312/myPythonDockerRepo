# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'bc0a876b-cb85-4ce0-afc9-32c21a7afb2d'
  imageRepository: 'mypythonapp'
  containerRegistry: 'mrunmay.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: CopyFiles@2
      inputs:
        Contents: 'azure-aks.yaml'
        TargetFolder: '$(build.artifactstagingdirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $organization = "$(organization)"
          $project = "$(project)"
          $buildId = "$(buildId)"
          $pat = "$(pat)"

          # Base64-encode the PAT for use in the Authorization header
          $base64AuthInfo = [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$($pat)"))

          # Azure DevOps API URL to update the build retention
          $uri = "https://dev.azure.com/$organization/$project/_apis/build/builds/$buildId?api-version=6.0"

          # Create the request body to retain the build
          $body = @{
              "retain" = $true
          } | ConvertTo-Json

          # Send the request to retain the build
          $response = Invoke-RestMethod -Uri $uri -Method Patch -Body $body -ContentType "application/json" -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)}

          # Output the response
          Write-Output $response
